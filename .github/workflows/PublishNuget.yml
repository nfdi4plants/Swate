name: Publish NuGet Package

on:
  workflow_dispatch: # Allows manual runs from the Actions tab

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.x.x'

      - name: Extract Latest Tag as Version
        id: get_version
        run: echo "GIT_TAG_LATEST=$(git describe --tags --abbrev=0 | sed 's/^v//')" >> "$GITHUB_ENV"

      - name: Debug GIT_TAG_LATEST
        run: echo "Version extracted; $GIT_TAG_LATEST"

      - name: Restore Dependencies
        run: dotnet restore src/Components/src/Swate.Components.fsproj

      - name: Install root NPM Dependencies
        run: npm install

      - name: Install NPM Dependencies
        run: npm install
        working-directory: src/Components

      # Creates css file with current tailwind style
      - name: Run Prebuild Script
        run: npm run prebuild:net
        working-directory: src/Components

      - name: Build Components Project
        run: dotnet build src/Components/src/Swate.Components.fsproj --configuration Release /p:GitTag=$GIT_TAG_LATEST

      - name: Build Shared Project
        run: dotnet build src/Shared/Swate.Components.Core.fsproj --configuration Release /p:GitTag=$GIT_TAG_LATEST

      - name: Pack Components NuGet Package
        run: dotnet pack src/Components/src/Swate.Components.fsproj --configuration Release --output nupkgs /p:GitTag=$GIT_TAG_LATEST

      - name: Pack Shared NuGet Package
        run: dotnet pack src/Shared/Swate.Components.Core.fsproj --configuration Release --output nupkgs /p:GitTag=$GIT_TAG_LATEST

      - name: Publish to NuGet
        run: dotnet nuget push "**/*.nupkg" --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
